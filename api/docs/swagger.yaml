definitions:
  auth.ChangePasswordReqBody:
    properties:
      CurrentPassword:
        type: string
      NewPassword:
        type: string
    type: object
  auth.Setting:
    properties:
      Language:
        type: string
      Notification:
        type: string
      PrivacyLevel:
        type: string
      Theme:
        type: string
    type: object
  auth.UserRes:
    properties:
      DateOfBirth:
        type: string
      Email:
        type: string
      FullName:
        type: string
      Id:
        type: string
      Username:
        type: string
    type: object
  memory.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      memory_id:
        type: string
      updated_at:
        type: string
      writer_id:
        type: string
    type: object
  memory.CommentCreateBody:
    properties:
      content:
        type: string
      memory_id:
        type: string
    type: object
  memory.CommentUpdateBody:
    properties:
      content:
        type: string
    type: object
  memory.GetAllRes:
    properties:
      count:
        type: integer
      memories:
        items:
          $ref: '#/definitions/memory.MemoryRes'
        type: array
    type: object
  memory.Media:
    properties:
      created_at:
        type: string
      id:
        type: string
      memory_id:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  memory.MediaCreateBody:
    properties:
      memory_id:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  memory.MemoryCreateBody:
    properties:
      date:
        type: string
      description:
        type: string
      locations:
        $ref: '#/definitions/memory.Point'
      place_name:
        type: string
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
    type: object
  memory.MemoryRes:
    properties:
      date:
        type: string
      description:
        type: string
      locations:
        $ref: '#/definitions/memory.Point'
      place_name:
        type: string
      privacy:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
    type: object
  memory.Point:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  memory.ShareCreateBody:
    properties:
      memory_id:
        type: string
      shared_with:
        items:
          type: string
        type: array
    type: object
  memory.ShareDeleteBody:
    properties:
      memory_id:
        type: string
      unshared_with:
        items:
          type: string
        type: array
      user_id:
        type: string
    type: object
  memory.ShareRes:
    properties:
      memony_title:
        type: string
      shared_with:
        items:
          type: string
        type: array
    type: object
  timeline.GetAllRes:
    properties:
      millistones:
        items:
          $ref: '#/definitions/timeline.Millistones'
        type: array
      total_count:
        type: integer
    type: object
  timeline.Millistone:
    properties:
      category:
        type: string
      create_at:
        type: string
      date:
        type: string
      deleted_at:
        type: integer
      description:
        type: string
      id:
        type: string
      title:
        type: string
      update_at:
        type: string
      user_id:
        type: string
    type: object
  timeline.Millistones:
    properties:
      category:
        type: string
      create_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  timeline.MillistonesCreateBody:
    properties:
      category:
        type: string
      date:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for Time Capsule resources
  title: Time Capsule API
  version: "1.0"
paths:
  /comments:
    delete:
      consumes:
      - application/json
      description: Delete a comment by ID
      parameters:
      - description: Comment ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Comment deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a comment
      tags:
      - comments
    get:
      consumes:
      - application/json
      description: Get all comments for a memory
      parameters:
      - description: Memory ID
        in: query
        name: memory_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memory.Comment'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get comments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create a new comment on a memory
      parameters:
      - description: Comment Create Body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/memory.CommentCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Comment created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a comment
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update the content of an existing comment
      parameters:
      - description: Comment ID
        in: query
        name: id
        required: true
        type: string
      - description: Comment Update Body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/memory.CommentUpdateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Comment updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a comment
      tags:
      - comments
  /media:
    delete:
      consumes:
      - application/json
      description: Delete a media entry by ID
      parameters:
      - description: Media ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Media deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete media
      tags:
      - media
    get:
      consumes:
      - application/json
      description: Get a media entry by ID
      parameters:
      - description: Memory ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memory.Media'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get media
      tags:
      - media
    post:
      consumes:
      - application/json
      description: Create a new media entry
      parameters:
      - description: Media Create Body
        in: body
        name: media
        required: true
        schema:
          $ref: '#/definitions/memory.MediaCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Media created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create media
      tags:
      - media
  /memories:
    delete:
      consumes:
      - application/json
      description: Delete a memory by ID
      parameters:
      - description: Memory ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Memory deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a memory
      tags:
      - memories
    get:
      consumes:
      - application/json
      description: Get a memory by ID
      parameters:
      - description: Memory ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memory.MemoryRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a memory
      tags:
      - memories
    post:
      consumes:
      - application/json
      description: Create a new memory
      parameters:
      - description: MemoryCreateBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/memory.MemoryCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Memory created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a memory
      tags:
      - memories
    put:
      consumes:
      - application/json
      description: Update a memory by ID
      parameters:
      - description: Memory ID
        in: path
        name: id
        required: true
        type: string
      - description: MemoryCreateBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/memory.MemoryCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Memory updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a memory
      tags:
      - memories
  /memories/all:
    get:
      consumes:
      - application/json
      description: Get all memories with optional filters
      parameters:
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Tag
        in: query
        name: tag
        type: string
      - description: Type
        in: query
        name: type
        type: string
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memory.GetAllRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all memories
      tags:
      - memories
  /millistones:
    get:
      consumes:
      - application/json
      description: Retrieve a list of millistones based on optional filters like date,
        category, user ID, limit, and offset
      parameters:
      - description: Date filter (YYYY-MM-DD)
        in: query
        name: date
        type: string
      - description: Category filter
        in: query
        name: category
        type: string
      - description: User ID filter
        in: query
        name: user_id
        type: string
      - description: Limit number of results
        in: query
        name: limit
        type: integer
      - description: Offset number for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timeline.GetAllRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all millistones based on filters
      tags:
      - millistones
    post:
      consumes:
      - application/json
      description: Create a new millistone with the specified details
      parameters:
      - description: Millistoneobjecttobecreated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/timeline.MillistonesCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Millistone created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new millistone
      tags:
      - millistones
  /millistones/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a millistone by its ID
      parameters:
      - description: Millistone ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Millistone deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a millistone by ID
      tags:
      - millistones
    get:
      consumes:
      - application/json
      description: Retrieve details of a millistone by its ID
      parameters:
      - description: Millistone ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timeline.Millistone'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a millistone by ID
      tags:
      - millistones
    put:
      consumes:
      - application/json
      description: Update an existing millistone with the specified details
      parameters:
      - description: Millistone ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated millistone details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/timeline.MillistonesCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: Millistone updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing millistone
      tags:
      - millistones
  /millistones/date:
    get:
      consumes:
      - application/json
      description: Retrieve millistones within a specified date range for a given
        user ID
      parameters:
      - description: Start date of range (YYYY-MM-DD)
        in: path
        name: from_date
        required: true
        type: string
      - description: End date of range (YYYY-MM-DD)
        in: path
        name: to_date
        required: true
        type: string
      - description: User ID filter
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timeline.GetAllRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get millistones within a date range
      tags:
      - millistones
  /passwords:
    put:
      consumes:
      - application/json
      description: Update the password of a user with the specified ID
      parameters:
      - description: Updated password details
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/auth.ChangePasswordReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Change user password
      tags:
      - passwords
  /profiles:
    get:
      consumes:
      - application/json
      description: Retrieve the profile of a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.UserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user profile
      tags:
      - profiles
    put:
      consumes:
      - application/json
      description: Update the profile of a user with the specified ID
      parameters:
      - description: Updated profile details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/auth.UserRes'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Edit user profile
      tags:
      - profiles
  /settings:
    get:
      consumes:
      - application/json
      description: Retrieve the settings of a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Setting'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: Update the settings of a user with the specified ID
      parameters:
      - description: Updated setting details
        in: body
        name: setting
        required: true
        schema:
          $ref: '#/definitions/auth.Setting'
      produces:
      - application/json
      responses:
        "200":
          description: Setting updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Edit user settings
      tags:
      - settings
  /shares:
    get:
      consumes:
      - application/json
      description: Get all shares for a memory
      parameters:
      - description: Memory ID
        in: query
        name: memory_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memory.ShareRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get shares
      tags:
      - shares
    post:
      consumes:
      - application/json
      description: Share a memory with other users
      parameters:
      - description: Share Create Body
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/memory.ShareCreateBody'
      produces:
      - application/json
      responses:
        "201":
          description: Share created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a share
      tags:
      - shares
    put:
      consumes:
      - application/json
      description: Remove a share for a memory
      parameters:
      - description: Share ID
        in: query
        name: share_id
        required: true
        type: string
      - description: Share Delete Body
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/memory.ShareDeleteBody'
      produces:
      - application/json
      responses:
        "200":
          description: Share updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Unshare a memory
      tags:
      - shares
  /users:
    delete:
      consumes:
      - application/json
      description: Delete a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
