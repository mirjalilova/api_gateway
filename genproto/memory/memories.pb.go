// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: memories.proto

package memory

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Date        string   `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Locations   *Point   `protobuf:"bytes,7,opt,name=locations,proto3" json:"locations,omitempty"`
	PlaceName   string   `protobuf:"bytes,8,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	Type        string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Privacy     string   `protobuf:"bytes,10,opt,name=privacy,proto3" json:"privacy,omitempty"`
	CreatedAt   string   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Memory) Reset() {
	*x = Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{0}
}

func (x *Memory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Memory) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Memory) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Memory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Memory) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Memory) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Memory) GetLocations() *Point {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *Memory) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *Memory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Memory) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

func (x *Memory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Memory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type MemoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Date        string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Locations   *Point   `protobuf:"bytes,5,opt,name=locations,proto3" json:"locations,omitempty"`
	PlaceName   string   `protobuf:"bytes,6,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	Type        string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Privacy     string   `protobuf:"bytes,8,opt,name=privacy,proto3" json:"privacy,omitempty"`
}

func (x *MemoryRes) Reset() {
	*x = MemoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryRes) ProtoMessage() {}

func (x *MemoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryRes.ProtoReflect.Descriptor instead.
func (*MemoryRes) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{1}
}

func (x *MemoryRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemoryRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemoryRes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MemoryRes) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MemoryRes) GetLocations() *Point {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MemoryRes) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *MemoryRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemoryRes) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

type MemoryCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Date        string   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Tags        []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Locations   *Point   `protobuf:"bytes,6,opt,name=locations,proto3" json:"locations,omitempty"`
	PlaceName   string   `protobuf:"bytes,7,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	Type        string   `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Privacy     string   `protobuf:"bytes,9,opt,name=privacy,proto3" json:"privacy,omitempty"`
}

func (x *MemoryCreate) Reset() {
	*x = MemoryCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryCreate) ProtoMessage() {}

func (x *MemoryCreate) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryCreate.ProtoReflect.Descriptor instead.
func (*MemoryCreate) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{2}
}

func (x *MemoryCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MemoryCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemoryCreate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemoryCreate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MemoryCreate) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MemoryCreate) GetLocations() *Point {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MemoryCreate) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *MemoryCreate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemoryCreate) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

type MemoryCreateBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Date        string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Locations   *Point   `protobuf:"bytes,5,opt,name=locations,proto3" json:"locations,omitempty"`
	PlaceName   string   `protobuf:"bytes,6,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	Type        string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Privacy     string   `protobuf:"bytes,8,opt,name=privacy,proto3" json:"privacy,omitempty"`
}

func (x *MemoryCreateBody) Reset() {
	*x = MemoryCreateBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryCreateBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryCreateBody) ProtoMessage() {}

func (x *MemoryCreateBody) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryCreateBody.ProtoReflect.Descriptor instead.
func (*MemoryCreateBody) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{3}
}

func (x *MemoryCreateBody) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemoryCreateBody) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemoryCreateBody) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MemoryCreateBody) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MemoryCreateBody) GetLocations() *Point {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MemoryCreateBody) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *MemoryCreateBody) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemoryCreateBody) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

type MemoryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Date        string   `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Locations   *Point   `protobuf:"bytes,7,opt,name=locations,proto3" json:"locations,omitempty"`
	PlaceName   string   `protobuf:"bytes,8,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	Type        string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Privacy     string   `protobuf:"bytes,10,opt,name=privacy,proto3" json:"privacy,omitempty"`
}

func (x *MemoryUpdate) Reset() {
	*x = MemoryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUpdate) ProtoMessage() {}

func (x *MemoryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUpdate.ProtoReflect.Descriptor instead.
func (*MemoryUpdate) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{4}
}

func (x *MemoryUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemoryUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MemoryUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemoryUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemoryUpdate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MemoryUpdate) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MemoryUpdate) GetLocations() *Point {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MemoryUpdate) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

func (x *MemoryUpdate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemoryUpdate) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

type GetAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string  `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string  `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Tag       string  `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Type      string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	UserId    string  `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filter    *Filter `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetAllReq) Reset() {
	*x = GetAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReq) ProtoMessage() {}

func (x *GetAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReq.ProtoReflect.Descriptor instead.
func (*GetAllReq) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAllReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetAllReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetAllReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetAllReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAllReq) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAllRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memories []*MemoryRes `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"`
	Count    int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllRes) Reset() {
	*x = GetAllRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRes) ProtoMessage() {}

func (x *GetAllRes) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRes.ProtoReflect.Descriptor instead.
func (*GetAllRes) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllRes) GetMemories() []*MemoryRes {
	if x != nil {
		return x.Memories
	}
	return nil
}

func (x *GetAllRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetByUser) Reset() {
	*x = GetByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByUser) ProtoMessage() {}

func (x *GetByUser) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByUser.ProtoReflect.Descriptor instead.
func (*GetByUser) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{7}
}

func (x *GetByUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetByTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetByTag) Reset() {
	*x = GetByTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memories_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByTag) ProtoMessage() {}

func (x *GetByTag) ProtoReflect() protoreflect.Message {
	mi := &file_memories_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByTag.ProtoReflect.Descriptor instead.
func (*GetByTag) Descriptor() ([]byte, []int) {
	return file_memories_proto_rawDescGZIP(), []int{8}
}

func (x *GetByTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetByTag) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_memories_proto protoreflect.FileDescriptor

var file_memories_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x02, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0xec,
	0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0x91, 0x02,
	0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x22, 0xac, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x24, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32,
	0xf1, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x0c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x61,
	0x67, 0x1a, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x12, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x0c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_memories_proto_rawDescOnce sync.Once
	file_memories_proto_rawDescData = file_memories_proto_rawDesc
)

func file_memories_proto_rawDescGZIP() []byte {
	file_memories_proto_rawDescOnce.Do(func() {
		file_memories_proto_rawDescData = protoimpl.X.CompressGZIP(file_memories_proto_rawDescData)
	})
	return file_memories_proto_rawDescData
}

var file_memories_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_memories_proto_goTypes = []any{
	(*Memory)(nil),           // 0: memory.Memory
	(*MemoryRes)(nil),        // 1: memory.MemoryRes
	(*MemoryCreate)(nil),     // 2: memory.MemoryCreate
	(*MemoryCreateBody)(nil), // 3: memory.MemoryCreateBody
	(*MemoryUpdate)(nil),     // 4: memory.MemoryUpdate
	(*GetAllReq)(nil),        // 5: memory.GetAllReq
	(*GetAllRes)(nil),        // 6: memory.GetAllRes
	(*GetByUser)(nil),        // 7: memory.GetByUser
	(*GetByTag)(nil),         // 8: memory.GetByTag
	(*Point)(nil),            // 9: memory.Point
	(*Filter)(nil),           // 10: memory.Filter
	(*GetById)(nil),          // 11: memory.GetById
	(*Void)(nil),             // 12: memory.Void
}
var file_memories_proto_depIdxs = []int32{
	9,  // 0: memory.Memory.locations:type_name -> memory.Point
	9,  // 1: memory.MemoryRes.locations:type_name -> memory.Point
	9,  // 2: memory.MemoryCreate.locations:type_name -> memory.Point
	9,  // 3: memory.MemoryCreateBody.locations:type_name -> memory.Point
	9,  // 4: memory.MemoryUpdate.locations:type_name -> memory.Point
	10, // 5: memory.GetAllReq.filter:type_name -> memory.Filter
	1,  // 6: memory.GetAllRes.memories:type_name -> memory.MemoryRes
	2,  // 7: memory.MemoryService.Create:input_type -> memory.MemoryCreate
	11, // 8: memory.MemoryService.Get:input_type -> memory.GetById
	7,  // 9: memory.MemoryService.GetHistoricalMemory:input_type -> memory.GetByUser
	8,  // 10: memory.MemoryService.GetByTagMemory:input_type -> memory.GetByTag
	5,  // 11: memory.MemoryService.GetAll:input_type -> memory.GetAllReq
	4,  // 12: memory.MemoryService.Update:input_type -> memory.MemoryUpdate
	11, // 13: memory.MemoryService.Delete:input_type -> memory.GetById
	12, // 14: memory.MemoryService.Create:output_type -> memory.Void
	1,  // 15: memory.MemoryService.Get:output_type -> memory.MemoryRes
	6,  // 16: memory.MemoryService.GetHistoricalMemory:output_type -> memory.GetAllRes
	6,  // 17: memory.MemoryService.GetByTagMemory:output_type -> memory.GetAllRes
	6,  // 18: memory.MemoryService.GetAll:output_type -> memory.GetAllRes
	12, // 19: memory.MemoryService.Update:output_type -> memory.Void
	12, // 20: memory.MemoryService.Delete:output_type -> memory.Void
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_memories_proto_init() }
func file_memories_proto_init() {
	if File_memories_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_memories_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MemoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MemoryCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MemoryCreateBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MemoryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memories_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetByTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_memories_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_memories_proto_goTypes,
		DependencyIndexes: file_memories_proto_depIdxs,
		MessageInfos:      file_memories_proto_msgTypes,
	}.Build()
	File_memories_proto = out.File
	file_memories_proto_rawDesc = nil
	file_memories_proto_goTypes = nil
	file_memories_proto_depIdxs = nil
}
